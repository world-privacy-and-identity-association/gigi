A template is constructed from a charstream. Everything that is not in "<?" to "?>" will be outputted directly. Text in these markers will be interpreted is template scripting syntax. The following strings are valid:

- <?=$variblename?> will output "variablename".
   if "variablename" is an Outputable output this thing recursively.
   else turn it into a String (Object.toString()) and output it.
   
- <?=_This is free Text.?> will translate "This is free Text." into the users language, (escaped) and output it.
   
- <?=s,$var1,$var2,$var3,...,$varn,This %s is, %s free.?>
  Translate the last string. Output $var1,...,$varn replaced into the %s positions in the translated string.

- <?=$!variablename?> will output the variable "variablename" but not HTML-escaped
- <?=s,$!variablename,My %s text?> will insert the variable "variablename" into the translated text but not HTML-escaped
- <?=s,"some data",My %s text?> will insert "some data" into the translated text
- <?=s,!"some data",My %s text?> will insert "some data" into the translated text literally (not HTML-escaped)
  
- <? if($variable) { ?>
  Output/execute the text until "<? } ?>" only if $variable is Boolean.TRUE (<=> !Boolean.FALSE) or not null. 
  
- <? foreach($variable) { ?>
  If $variable is an "IterableDataset"
  Output/execute the text until "<? } ?>" repeated as $variable suggests. 
  Special variables that $variable defines can be used in the inner text.
 
  
  